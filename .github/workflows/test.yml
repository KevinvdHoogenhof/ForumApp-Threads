name: .NET test

on:
  pull_request:
    branches: [ "develop" ]

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET    
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
            ${{ runner.os }}-nuget 
            
    - name: Restore dependencies
      run: dotnet restore 

    - name: Build
      run: dotnet build --no-restore

#    - name: Run Snyk test
#      uses: snyk/actions/dotnet@master
#      continue-on-error: true
#      env:
#        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}    
#      with:
#        command: code test        
      
#    - name: Dotnet test
#      run: dotnet test --no-build --logger "trx;LogFileName=test-results.trx" || true --verbosity normal
      
#    - name: roslynator
#      run: dotnet tool install -g roslynator.dotnet.cli
      
#    - name: roslynator test
#      continue-on-error: true
#      run: roslynator analyze

    - name: Test
      run: dotnet test --no-build --logger "trx;LogFileName=test-results.trx" --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
        
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
      
    - name: Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Upload .NET Test results
        path: "**/test-results.trx"                            
#        reporter: dotnet-trx
#        fail-on-error: true
